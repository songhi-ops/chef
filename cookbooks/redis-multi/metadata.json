{
  "name": "redis-multi",
  "description": "Redis replication wrapper cookbook",
  "long_description": "redis-multi\n===========\n\nChef wrapper cookbook to create master, slaves, and sentinel redis server\nsetups. This wrapper should work on all Debian and RHEL platform family OS's.\n\nUtilization\n------------\n\nCookbook works as a wrapper around the community redisio cookbook to allow for\nthe creation of master/slave and sentinel systems.\n\nThe cookbook utilizes three recipes depending on the server's role.\n\n`default.rb` : calls upstream rediosio::default\n\n`enable.rb` : calls upstream redisio::enable\n\n`master.rb` : sets up a redis server and init script with master in name\n\n`slave.rb` : sets up a slave redis server pointing to the master node\ndefinded within attributes.\n\nSearch will look for the node in the same environment with the tag\n`redis_master` and set slaveof replication to that node. If you do not want to\nuse search, create the master node first before bootstrapping, and set the\nattribute `['redis-multi']['master']` with the correct IP.\n\n`slave.rb` : sets up a slave redis server pointing to the master node\ndefinded within attributes.\n\nSearch will be used in the same fashion as the `redis_slave.rb` recipe above (\n  they share the `_find_master.rb` functionality.)\n\nNote that `find_all.rb` is included here as a recipe. This is done in case a\nwrapper cookbook wants to find all redis nodes for iptables or some other\npurpose.\n\nAttributes\n-----------\n\n`default['redis-multi']['master'] = nil` Used to identify a master IP address.\nThis value will be populated after first run using search and a `redis_master`\ntag.\n\n`default['redis-multi']['slaves'] = %w()` Used to hold a list of slave IP\naddresses that is populated through search and a `redis_slave` tag.\n\n** Note that the two settings below only apply if you don't define your own\n`node[redisio]` instances of redis (if you call the recipe without doing that,\nthese ports will be used as the defaults for new instances)\n\n`default['redis-multi']['bind_port'] = 6379` Used for the port for masters,\nslaves, and sentinels. Right now, this must be the same everywhere. To override\nports, and make them different on different nodes, you will have to use upstream\ndirectly.\n\n`default['redis-multi']['sentinel_port'] = 46379` Used to specify an alternate\ndefault port for sentinel instances.\n\nLicense & Authors\n-----------------\n- Author:: Martin Smith (<martin.smith@rackspace.com>)\n\nThis cookbook was structured and heavily borrowed inspiration from [mysql-multi](https://github.com/rackspace-cookbooks/mysql-multi).\n\n```text\n\nCopyright:: 2014 Rackspace US, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "Martin Smith",
  "maintainer_email": "martin.smith@rackspace.com",
  "license": "Apache 2.0",
  "platforms": {
    "ubuntu": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "redhat": ">= 0.0.0"
  },
  "dependencies": {
    "apt": ">= 0.0.0",
    "chef-sugar": ">= 0.0.0",
    "redisio": "~> 2.1"
  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {

  },
  "version": "1.0.0"
}
